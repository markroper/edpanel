allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    apply plugin: 'idea'
    apply plugin: 'eclipse'

    repositories {
        mavenCentral()
    }
}

idea {
    project {
        jdkName = '1.7'
        languageLevel = '1.7'
    }
}

subprojects {
    evaluationDependsOn(':common')

    compileJava {
        options.compilerArgs << "-Werror"
        options.compilerArgs << "-Xlint:unchecked"
    }

    test {
        useTestNG() {
            useDefaultListeners = true
            def suiteFile = "src/test/resources/${project.name}-unit.xml"
            options.suites(suiteFile)
        }

        beforeTest { descriptor ->
            logger.lifecycle("Running test: " + descriptor)
        }
    }
}

task integrationCodeCoverageReport(type: JacocoReport) {

    // Gather execution data from all subprojects
    // (change this if you e.g. want to calculate unit test/integration test coverage separately)
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Add all relevant sourcesets from the subprojects
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled true
        html.destination "${buildDir}/reports/jacoco"
        csv.enabled false
    }
}

task resetDatabase(type: Exec) {
    commandLine 'mysql', "-uwarehouse -pt3achTh3Childr3n < ${project.rootDir.absolutePath}/database/cleanMySqlDatabase.sql"
}

task refillDatabase(type: Exec, dependsOn: resetDatabase) {
    commandLine 'mysql', "-uwarehouse -pt3achTh3Childr3n < ${project.rootDir.absolutePath}/database/createTableDDL.sql"
}

// run the integration tests before generating the report
integrationCodeCoverageReport.dependsOn {
      project(':warehouse').integrationLocalWithContainer
}